$date
	Mon May 30 19:23:45 2022
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module pro_tb2 $end
$var wire 32 ! valE [31:0] $end
$var wire 16 " valC [15:0] $end
$var wire 32 # valB [31:0] $end
$var wire 32 $ valA [31:0] $end
$var wire 4 % rB [3:0] $end
$var wire 4 & rA [3:0] $end
$var wire 32 ' r7 [31:0] $end
$var wire 32 ( r6 [31:0] $end
$var wire 32 ) r5 [31:0] $end
$var wire 32 * r4 [31:0] $end
$var wire 32 + r3 [31:0] $end
$var wire 32 , r2 [31:0] $end
$var wire 32 - r1 [31:0] $end
$var wire 32 . r0 [31:0] $end
$var wire 4 / ifun [3:0] $end
$var wire 4 0 icode [3:0] $end
$var reg 9 1 addr [8:0] $end
$var reg 1 2 clock $end
$var reg 32 3 wdata [31:0] $end
$var reg 1 4 working $end
$var reg 1 5 wr $end
$scope module processor $end
$var wire 9 6 addr [8:0] $end
$var wire 32 7 aluA [31:0] $end
$var wire 32 8 aluB [31:0] $end
$var wire 1 2 clock $end
$var wire 32 9 valE [31:0] $end
$var wire 32 : wdata [31:0] $end
$var wire 1 4 working $end
$var wire 1 5 wr $end
$var wire 32 ; valB [31:0] $end
$var wire 32 < valA [31:0] $end
$var wire 32 = read_w [31:0] $end
$var wire 4 > rB [3:0] $end
$var wire 4 ? rA [3:0] $end
$var wire 32 @ r7 [31:0] $end
$var wire 32 A r6 [31:0] $end
$var wire 32 B r5 [31:0] $end
$var wire 32 C r4 [31:0] $end
$var wire 32 D r3 [31:0] $end
$var wire 32 E r2 [31:0] $end
$var wire 32 F r1 [31:0] $end
$var wire 32 G r0 [31:0] $end
$var wire 4 H ifun [3:0] $end
$var wire 4 I icode [3:0] $end
$var wire 32 J aluValE [31:0] $end
$var wire 9 K addr_w [8:0] $end
$var reg 9 L PC [8:0] $end
$var reg 4 M alufun [3:0] $end
$var reg 4 N dstE_reg [3:0] $end
$var reg 4 O dstM [3:0] $end
$var reg 1 P read $end
$var reg 1 Q reg_rst $end
$var reg 16 R valC [15:0] $end
$var reg 32 S valM [31:0] $end
$scope module alu $end
$var wire 32 T aluA [31:0] $end
$var wire 32 U aluB [31:0] $end
$var wire 4 V alufun [3:0] $end
$var reg 32 W valE [31:0] $end
$upscope $end
$scope module ram $end
$var wire 9 X addr [8:0] $end
$var wire 1 2 clock $end
$var wire 1 P rd $end
$var wire 32 Y wdata [31:0] $end
$var wire 1 5 wr $end
$var reg 32 Z rdata [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 1 2 clock $end
$var wire 4 [ dstE [3:0] $end
$var wire 4 \ dstM [3:0] $end
$var wire 4 ] rA [3:0] $end
$var wire 4 ^ rB [3:0] $end
$var wire 1 Q reset $end
$var wire 32 _ valE [31:0] $end
$var wire 32 ` valM [31:0] $end
$var reg 32 a r0 [31:0] $end
$var reg 32 b r1 [31:0] $end
$var reg 32 c r2 [31:0] $end
$var reg 32 d r3 [31:0] $end
$var reg 32 e r4 [31:0] $end
$var reg 32 f r5 [31:0] $end
$var reg 32 g r6 [31:0] $end
$var reg 32 h r7 [31:0] $end
$var reg 32 i valA [31:0] $end
$var reg 32 j valB [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
b0 `
bx _
bz ^
bz ]
b0 \
b1111 [
bz Z
b0 Y
b0 X
bx W
bx V
bx U
bx T
b0 S
bx R
1Q
0P
b0 O
b1111 N
bx M
b0 L
b0 K
bx J
bz I
bz H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bz ?
bz >
bz =
bx <
bx ;
b0 :
bx 9
bx 8
bx 7
b0 6
05
04
b0 3
02
b0 1
bz 0
bz /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bz &
bz %
bx $
bx #
bx "
bx !
$end
#1000
b0 '
b0 @
b0 h
b0 (
b0 A
b0 g
b0 )
b0 B
b0 f
b0 *
b0 C
b0 e
b0 +
b0 D
b0 d
b0 ,
b0 E
b0 c
b0 -
b0 F
b0 b
b0 .
b0 G
b0 a
b0 8
b0 U
b0 #
b0 ;
b0 j
b0 7
b0 T
b0 $
b0 <
b0 i
12
#2000
bz 8
bz U
bz #
bz ;
bz j
bz 7
bz T
bz $
bz <
bz i
b10000111100000000000010000000 3
b10000111100000000000010000000 :
b10000111100000000000010000000 Y
15
0Q
02
#3000
12
#4000
b1 K
b1 X
b10000111100010000000010000001 3
b10000111100010000000010000001 :
b10000111100010000000010000001 Y
b1 1
b1 6
02
#5000
12
#6000
b10 K
b10 X
b10000111100100000000010000010 3
b10000111100100000000010000010 :
b10000111100100000000010000010 Y
b10 1
b10 6
02
#7000
12
#8000
b11 K
b11 X
b10000111100110000000010000011 3
b10000111100110000000010000011 :
b10000111100110000000010000011 Y
b11 1
b11 6
02
#9000
12
#10000
b100 K
b100 X
b10000111101000000000010000100 3
b10000111101000000000010000100 :
b10000111101000000000010000100 Y
b100 1
b100 6
02
#11000
12
#12000
b101 K
b101 X
b10000111101010000000010000101 3
b10000111101010000000010000101 :
b10000111101010000000010000101 Y
b101 1
b101 6
02
#13000
12
#14000
b110 K
b110 X
b10000111101100000000010000110 3
b10000111101100000000010000110 :
b10000111101100000000010000110 Y
b110 1
b110 6
02
#15000
12
#16000
b111 K
b111 X
b10000111101110000000010000111 3
b10000111101110000000010000111 :
b10000111101110000000010000111 Y
b111 1
b111 6
02
#17000
12
#18000
b1000 K
b1000 X
b100000000000010000000000000000 3
b100000000000010000000000000000 :
b100000000000010000000000000000 Y
b1000 1
b1000 6
02
#19000
12
#20000
b1001 K
b1001 X
b100001001000110000000000000000 3
b100001001000110000000000000000 :
b100001001000110000000000000000 Y
b1001 1
b1001 6
02
#21000
12
#22000
b1010 K
b1010 X
b100010010001010000000000000000 3
b100010010001010000000000000000 :
b100010010001010000000000000000 Y
b1010 1
b1010 6
02
#23000
12
#24000
b1011 K
b1011 X
b100011011001110000000000000000 3
b100011011001110000000000000000 :
b100011011001110000000000000000 Y
b1011 1
b1011 6
02
#25000
12
#26000
b0 K
b0 X
b0 3
b0 :
b0 Y
05
b0 1
b0 6
02
#27000
14
12
#28000
02
#29000
b0 %
b0 >
b0 ^
b1111 &
b1111 ?
b1111 ]
b0 /
b0 H
b1 0
b1 I
b1 K
b1 X
b10000111100000000000010000000 =
b10000111100000000000010000000 Z
bz "
bz R
b1 L
1P
12
#30000
02
#31000
b10 K
b10 X
b1 %
b1 >
b1 ^
b10000000 S
b10000000 `
b10000000 "
b10000000 R
b10 L
b10000111100010000000010000001 =
b10000111100010000000010000001 Z
b0 8
b0 U
b0 #
b0 ;
b0 j
12
#32000
02
#33000
b10 %
b10 >
b10 ^
b11 K
b11 X
b10000111100100000000010000010 =
b10000111100100000000010000010 Z
b10000001 S
b10000001 `
b1 O
b1 \
b10000001 "
b10000001 R
b11 L
b10000000 .
b10000000 G
b10000000 a
12
#34000
02
#35000
b100 K
b100 X
b11 %
b11 >
b11 ^
b10000010 S
b10000010 `
b10 O
b10 \
b10000010 "
b10000010 R
b100 L
b10000111100110000000010000011 =
b10000111100110000000010000011 Z
b10000001 -
b10000001 F
b10000001 b
12
#36000
02
#37000
b100 %
b100 >
b100 ^
b101 K
b101 X
b10000111101000000000010000100 =
b10000111101000000000010000100 Z
b10000011 S
b10000011 `
b11 O
b11 \
b10000011 "
b10000011 R
b101 L
b10000010 ,
b10000010 E
b10000010 c
12
#38000
02
#39000
b110 K
b110 X
b101 %
b101 >
b101 ^
b10000100 S
b10000100 `
b100 O
b100 \
b10000100 "
b10000100 R
b110 L
b10000111101010000000010000101 =
b10000111101010000000010000101 Z
b10000011 +
b10000011 D
b10000011 d
12
#40000
02
#41000
b110 %
b110 >
b110 ^
b111 K
b111 X
b10000111101100000000010000110 =
b10000111101100000000010000110 Z
b10000101 S
b10000101 `
b101 O
b101 \
b10000101 "
b10000101 R
b111 L
b10000100 *
b10000100 C
b10000100 e
12
#42000
02
#43000
b1000 K
b1000 X
b111 %
b111 >
b111 ^
b10000110 S
b10000110 `
b110 O
b110 \
b10000110 "
b10000110 R
b1000 L
b10000111101110000000010000111 =
b10000111101110000000010000111 Z
b10000101 )
b10000101 B
b10000101 f
12
#44000
02
#45000
b1 %
b1 >
b1 ^
b0 &
b0 ?
b0 ]
b10 0
b10 I
b1001 K
b1001 X
b100000000000010000000000000000 =
b100000000000010000000000000000 Z
b10000111 S
b10000111 `
b111 O
b111 \
b10000111 "
b10000111 R
b1001 L
b10000110 (
b10000110 A
b10000110 g
12
#46000
02
#47000
b100000001 !
b100000001 9
b100000001 J
b100000001 W
b100000001 _
b1010 K
b1010 X
b11 %
b11 >
b11 ^
b10 &
b10 ?
b10 ]
b1 /
b1 H
b0 N
b0 [
b0 M
b0 V
b0 "
b0 R
b1010 L
b100001001000110000000000000000 =
b100001001000110000000000000000 Z
b10000001 8
b10000001 U
b10000001 #
b10000001 ;
b10000001 j
b10000000 7
b10000000 T
b10000000 $
b10000000 <
b10000000 i
b10000111 '
b10000111 @
b10000111 h
12
#48000
02
#49000
b11111111111111111111111111111111 !
b11111111111111111111111111111111 9
b11111111111111111111111111111111 J
b11111111111111111111111111111111 W
b11111111111111111111111111111111 _
b101 %
b101 >
b101 ^
b100 &
b100 ?
b100 ]
b10 /
b10 H
b1011 K
b1011 X
b100010010001010000000000000000 =
b100010010001010000000000000000 Z
b10 N
b10 [
b1 M
b1 V
b1011 L
b10000011 8
b10000011 U
b10000011 #
b10000011 ;
b10000011 j
b10000010 7
b10000010 T
b10000010 $
b10000010 <
b10000010 i
b100000001 .
b100000001 G
b100000001 a
12
#50000
02
#51000
b1 !
b1 9
b1 J
b1 W
b1 _
b1100 K
b1100 X
b111 %
b111 >
b111 ^
b110 &
b110 ?
b110 ]
b11 /
b11 H
b100 N
b100 [
b10 M
b10 V
b1100 L
b100011011001110000000000000000 =
b100011011001110000000000000000 Z
b10000101 8
b10000101 U
b10000101 #
b10000101 ;
b10000101 j
b10000100 7
b10000100 T
b10000100 $
b10000100 <
b10000100 i
b11111111111111111111111111111111 ,
b11111111111111111111111111111111 E
b11111111111111111111111111111111 c
12
#52000
02
#53000
b0 !
b0 9
b0 J
b0 W
b0 _
bx %
bx >
bx ^
bx &
bx ?
bx ]
bx /
bx H
bx 0
bx I
b1101 K
b1101 X
bx =
bx Z
b110 N
b110 [
b11 M
b11 V
b1101 L
b10000111 8
b10000111 U
b10000111 #
b10000111 ;
b10000111 j
b10000110 7
b10000110 T
b10000110 $
b10000110 <
b10000110 i
b1 *
b1 C
b1 e
12
#54000
02
#55000
b1110 K
b1110 X
bx "
bx R
b1110 L
bz 8
bz U
bz #
bz ;
bz j
bz 7
bz T
bz $
bz <
bz i
b0 (
b0 A
b0 g
12
#56000
02
#57000
b1111 K
b1111 X
b1111 L
12
#58000
02
#59000
b10000 K
b10000 X
b10000 L
12
#60000
02
#61000
b10001 K
b10001 X
b10001 L
12
#62000
02
#63000
b10010 K
b10010 X
b10010 L
12
#64000
02
#65000
b10011 K
b10011 X
b10011 L
12
#66000
02
#67000
b10100 K
b10100 X
b10100 L
12
#68000
02
#69000
b10101 K
b10101 X
b10101 L
12
#70000
02
#71000
b10110 K
b10110 X
b10110 L
12
#72000
02
#73000
b10111 K
b10111 X
b10111 L
12
#74000
02
#75000
b11000 K
b11000 X
b11000 L
12
#76000
02
#77000
