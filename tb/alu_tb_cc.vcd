$date
	Wed Jun 01 20:44:14 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$var wire 32 ! valE [31:0] $end
$var wire 3 " cc [2:0] $end
$var reg 32 # aluA [31:0] $end
$var reg 32 $ aluB [31:0] $end
$var reg 4 % alufun [3:0] $end
$scope module alu $end
$var wire 32 & A [31:0] $end
$var wire 32 ' B [31:0] $end
$var wire 32 ( E [31:0] $end
$var wire 32 ) aluA [31:0] $end
$var wire 32 * aluB [31:0] $end
$var wire 4 + alufun [3:0] $end
$var wire 32 , valE [31:0] $end
$var wire 3 - cc [2:0] $end
$var wire 1 . ZF $end
$var wire 1 / SF $end
$var wire 1 0 OF $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
00
0/
1.
b100 -
b0 ,
b10 +
b10001 *
b1000100000000 )
b0 (
b10001 '
b1000100000000 &
b10 %
b10001 $
b1000100000000 #
b100 "
b0 !
$end
#20
1/
b10 "
b10 -
0.
b11111111111111111111111011011110 (
b11111111111111111111111011011110 !
b11111111111111111111111011011110 ,
b100110011 '
b100110011 $
b100110011 *
b10001 &
b10001 #
b10001 )
b1 %
b1 +
#40
b11 "
b11 -
10
b11111111111111011010010100010100 (
b11111111111111011010010100010100 !
b11111111111111011010010100010100 ,
b1111111111111101101001010001010 '
b1111111111111101101001010001010 $
b1111111111111101101001010001010 *
b1111111111111101101001010001010 &
b1111111111111101101001010001010 #
b1111111111111101101001010001010 )
b0 %
b0 +
#60
0/
b1 "
b1 -
10
b1101111110011100110010110000001 (
b1101111110011100110010110000001 !
b1101111110011100110010110000001 ,
b1111110111111111100010101011100 '
b1111110111111111100010101011100 $
b1111110111111111100010101011100 *
b11101110110011100010101011011101 &
b11101110110011100010101011011101 #
b11101110110011100010101011011101 )
b1 %
b1 +
#140
