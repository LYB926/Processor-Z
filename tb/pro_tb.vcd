$date
	Tue May 31 09:48:54 2022
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module pro_tb $end
$var wire 16 ! valC [15:0] $end
$var wire 4 " rB [3:0] $end
$var wire 4 # rA [3:0] $end
$var wire 4 $ ifun [3:0] $end
$var wire 4 % icode [3:0] $end
$var reg 9 & addr [8:0] $end
$var reg 1 ' clock $end
$var reg 32 ( wdata [31:0] $end
$var reg 1 ) working $end
$var reg 1 * wr $end
$scope module processor $end
$var wire 32 + F_read [31:0] $end
$var wire 9 , addr [8:0] $end
$var wire 1 ' clock $end
$var wire 4 - icode [3:0] $end
$var wire 4 . ifun [3:0] $end
$var wire 4 / rA [3:0] $end
$var wire 4 0 rB [3:0] $end
$var wire 16 1 valC [15:0] $end
$var wire 32 2 wdata [31:0] $end
$var wire 1 ) working $end
$var wire 1 * wr $end
$var wire 32 3 rdata [31:0] $end
$var wire 1 4 rd $end
$var wire 9 5 addr_w [8:0] $end
$var reg 4 6 D_icode [3:0] $end
$var reg 4 7 D_ifun [3:0] $end
$var reg 4 8 D_rA [3:0] $end
$var reg 4 9 D_rB [3:0] $end
$var reg 16 : D_valC [15:0] $end
$var reg 9 ; PC [8:0] $end
$scope module ram $end
$var wire 9 < addr [8:0] $end
$var wire 1 ' clock $end
$var wire 1 4 rd $end
$var wire 32 = wdata [31:0] $end
$var wire 1 * wr $end
$var reg 32 > rdata [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bz >
b0 =
b0 <
b0 ;
bz :
bz 9
bz 8
bz 7
bz 6
b0 5
04
bz 3
b0 2
bz 1
bz 0
bz /
bz .
bz -
b0 ,
bz +
0*
0)
b0 (
0'
b0 &
bz %
bz $
bz #
bz "
bz !
$end
#1000
1'
#2000
1*
b10000111100000000000000010000 (
b10000111100000000000000010000 2
b10000111100000000000000010000 =
0'
#3000
1'
#4000
b1 5
b1 <
b100000000000010000000000000000 (
b100000000000010000000000000000 2
b100000000000010000000000000000 =
b1 &
b1 ,
0'
#5000
1'
#6000
b10 5
b10 <
b100001001000110000000000000000 (
b100001001000110000000000000000 2
b100001001000110000000000000000 =
b10 &
b10 ,
0'
#7000
1'
#8000
b11 5
b11 <
b100010010001010000000000000000 (
b100010010001010000000000000000 2
b100010010001010000000000000000 =
b11 &
b11 ,
0'
#9000
1'
#10000
b100 5
b100 <
b100011011001110000000000000000 (
b100011011001110000000000000000 2
b100011011001110000000000000000 =
b100 &
b100 ,
0'
#11000
1'
#12000
14
b0 5
b0 <
1)
0*
b0 (
b0 2
b0 =
b0 &
b0 ,
0'
#13000
b1 5
b1 <
b10000111100000000000000010000 +
b10000111100000000000000010000 3
b10000111100000000000000010000 >
b1 ;
1'
#14000
0'
#15000
b10 5
b10 <
b10000 !
b10000 1
b10000 :
b0 "
b0 0
b0 #
b0 /
b0 9
b1111 8
b0 $
b0 .
b0 7
b1 %
b1 -
b1 6
b10 ;
b100000000000010000000000000000 +
b100000000000010000000000000000 3
b100000000000010000000000000000 >
1'
#16000
0'
#17000
b11 5
b11 <
b100001001000110000000000000000 +
b100001001000110000000000000000 3
b100001001000110000000000000000 >
b11 ;
b0 !
b0 1
b0 :
b1 "
b1 0
b1 #
b1 /
b1 9
b0 8
b10 %
b10 -
b10 6
1'
#18000
0'
#19000
b100 5
b100 <
b11 "
b11 0
b11 #
b11 /
b11 9
b10 8
b1 $
b1 .
b1 7
b100 ;
b100010010001010000000000000000 +
b100010010001010000000000000000 3
b100010010001010000000000000000 >
1'
#20000
0'
#21000
b101 5
b101 <
b100011011001110000000000000000 +
b100011011001110000000000000000 3
b100011011001110000000000000000 >
b101 ;
b101 "
b101 0
b101 #
b101 /
b101 9
b100 8
b10 $
b10 .
b10 7
1'
#22000
0'
#23000
b110 5
b110 <
b111 "
b111 0
b111 #
b111 /
b111 9
b110 8
b11 $
b11 .
b11 7
b110 ;
bx +
bx 3
bx >
1'
#24000
0'
#25000
b111 5
b111 <
b111 ;
bx !
bx 1
bx :
bx "
bx 0
bx #
bx /
bx 9
bx 8
bx $
bx .
bx 7
bx %
bx -
bx 6
1'
#26000
0'
#27000
